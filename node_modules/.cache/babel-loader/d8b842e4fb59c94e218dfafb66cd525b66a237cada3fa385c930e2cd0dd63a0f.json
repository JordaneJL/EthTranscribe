{"ast":null,"code":"var _jsxFileName = \"/Users/jordane/Desktop/WalletScan/scan/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Buffer } from 'buffer';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [inputAddress, setInputAddress] = useState('');\n  const [displayTransactions, setDisplayTransactions] = useState(false);\n  const web3 = new Web3(window.ethereum);\n  const apiKey = process.env.REACT_APP_ETHERSCAN_API_KEY;\n  const tweetLink = `https://twitter.com/stonecoldpat0/status/1638254398072582151`;\n  useEffect(() => {\n    const isValidAddress = web3.utils.isAddress(inputAddress);\n    if (!isValidAddress) {\n      return;\n    }\n    const fetchData = async () => {\n      const result = await axios(`https://api.etherscan.io/api?module=account&action=txlist&address=${encodeURIComponent(inputAddress)}&startblock=0&endblock=99999999&page=1&sort=desc&apikey=${apiKey}`);\n      setData(result.data.result);\n    };\n    if (displayTransactions) {\n      fetchData();\n    }\n  }, [inputAddress, displayTransactions]);\n  const getTransactionLink = txHash => {\n    return `https://etherscan.io/tx/${txHash}`;\n  };\n  const getHumanReadibleMessage = hexString => {\n    try {\n      return decodeURIComponent(escape(Buffer.from(hexString, 'hex').toString('utf8')));\n    } catch (error) {\n      console.log(error);\n      return \"Error: Unable to decode input data\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl text-center font-bold mb-8\",\n      children: \"Easily fetch message history from an ethereum address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        className: \"block mb-2\",\n        children: \"Enter an ethereum address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        value: inputAddress,\n        onChange: e => setInputAddress(e.target.value),\n        className: \"border border-gray-400 py-2 px-4 rounded w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDisplayTransactions(true),\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\",\n      children: \"Fetch Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), Array.isArray(data) && data.length > 0 ? data.filter(tx => tx.input !== '0x' && !getHumanReadibleMessage(tx.input.slice(2)).startsWith('Error')).map(tx => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"mb-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-gray-400 p-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold mb-2\",\n          children: \"Transaction:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: getTransactionLink(tx.hash),\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: tx.hash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold mb-2\",\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tx.from\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold mb-2\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getHumanReadibleMessage(tx.input.slice(2))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)\n    }, tx.hash, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)) : displayTransactions && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No transactions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      class: \"bg-neutral-200 text-center dark\\n:bg-neutral-700 lg:text-left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"p-4 text-center text-neutral-950 dark:text-neutral-200\",\n        children: [\"Quickly built by\", /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"text-neutral-950 dark:text-neutral-400\",\n          href: \"https://twitter.com/StringerSoze\",\n          children: \" StringerSoze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 5\n        }, this), \" | Designed based on\", /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"text-neutral-800 dark:text-neutral-400\",\n          href: \"https://twitter.com/stonecoldpat0/status/1638254398072582151\",\n          children: \" Patrick McCorry's tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 132\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"R25Z309UdNR4tJGVfUqx5vsaX3s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Buffer","Web3","jsxDEV","_jsxDEV","App","_s","data","setData","inputAddress","setInputAddress","displayTransactions","setDisplayTransactions","web3","window","ethereum","apiKey","process","env","REACT_APP_ETHERSCAN_API_KEY","tweetLink","isValidAddress","utils","isAddress","fetchData","result","encodeURIComponent","getTransactionLink","txHash","getHumanReadibleMessage","hexString","decodeURIComponent","escape","from","toString","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","Array","isArray","length","filter","tx","input","slice","startsWith","map","href","hash","rel","class","_c","$RefreshReg$"],"sources":["/Users/jordane/Desktop/WalletScan/scan/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Buffer } from 'buffer';\nimport Web3 from 'web3';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [inputAddress, setInputAddress] = useState('');\n  const [displayTransactions, setDisplayTransactions] = useState(false);\n  const web3 = new Web3(window.ethereum);\n  const apiKey = process.env.REACT_APP_ETHERSCAN_API_KEY;\n  const tweetLink = `https://twitter.com/stonecoldpat0/status/1638254398072582151`;\n\n  useEffect(() => {\n    const isValidAddress = web3.utils.isAddress(inputAddress);\n    if (!isValidAddress) {\n      return;\n    }\n    const fetchData = async () => {\n      const result = await axios(\n        `https://api.etherscan.io/api?module=account&action=txlist&address=${encodeURIComponent(inputAddress)}&startblock=0&endblock=99999999&page=1&sort=desc&apikey=${apiKey}`\n      );\n      setData(result.data.result);\n    };\n    \n    if (displayTransactions) {\n      fetchData();\n    }\n  }, [inputAddress, displayTransactions]);\n  \n\n  const getTransactionLink = (txHash) => {\n    return `https://etherscan.io/tx/${txHash}`;\n  };\n\n  const getHumanReadibleMessage = (hexString) => {\n    try {\n      return decodeURIComponent(escape(Buffer.from(hexString, 'hex').toString('utf8')));\n    } catch (error) {\n      console.log(error);\n      return \"Error: Unable to decode input data\";\n    }\n  };\n  \n  \n  return (\n    <div className=\"p-8\">\n      <h2 className=\"text-3xl text-center font-bold mb-8\">Easily fetch message history from an ethereum address</h2>\n      <div className=\"mb-8\">\n        <label htmlFor=\"address\" className=\"block mb-2\">\n          Enter an ethereum address:\n        </label>\n        <input\n          type=\"text\"\n          id=\"address\"\n          value={inputAddress}\n          onChange={(e) => setInputAddress(e.target.value)}\n          className=\"border border-gray-400 py-2 px-4 rounded w-full\"\n        />\n      </div>\n      <button onClick={() => setDisplayTransactions(true)} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\">\n        Fetch Transactions\n      </button>\n      {Array.isArray(data) && data.length > 0 ? (\n        data\n          .filter((tx) => tx.input !== '0x' && !getHumanReadibleMessage(tx.input.slice(2)).startsWith('Error'))\n          .map((tx) => (\n            <li key={tx.hash} className=\"mb-8\">\n              <div className=\"bg-white border border-gray-400 p-4 rounded\">\n                <p className=\"font-bold mb-2\">Transaction:</p>\n                <a href={getTransactionLink(tx.hash)} target=\"_blank\" rel=\"noreferrer\">\n                  {tx.hash}\n                </a>\n                <p className=\"font-bold mb-2\">From:</p>\n                <p>{tx.from}</p>\n                <p className=\"font-bold mb-2\">Message:</p>\n                <p>{getHumanReadibleMessage(tx.input.slice(2))}</p>\n              </div>\n            </li>\n          ))\n      ) : (\n        displayTransactions && <p>No transactions found.</p>\n      )}\n      <footer\n  class=\"bg-neutral-200 text-center dark\n:bg-neutral-700 lg:text-left\">\n  <div class=\"p-4 text-center text-neutral-950 dark:text-neutral-200\">\n    Quickly built by\n    <a class=\"text-neutral-950 dark:text-neutral-400\" href=\"https://twitter.com/StringerSoze\"> StringerSoze</a> | Designed based on<a class=\"text-neutral-800 dark:text-neutral-400\" href=\"https://twitter.com/stonecoldpat0/status/1638254398072582151\"> Patrick McCorry's tweet</a>\n  </div>\n</footer>\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}