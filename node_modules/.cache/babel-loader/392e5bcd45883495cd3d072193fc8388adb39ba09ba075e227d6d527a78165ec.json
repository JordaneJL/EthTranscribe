{"ast":null,"code":"var _jsxFileName = \"/Users/jordane/Desktop/WalletScan/scan/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"ethereumjs-util\";\nimport { translate } from \"google-translates-api\";\nimport TransactionList from \"./TransactionList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [transactions, setTransactions] = useState([]);\n  const [englishMessages, setEnglishMessages] = useState([]);\n  const apiKey = '8GJCS6VIZ9GEXSMKMMHVRTKVZG62AZWGK2';\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      if (!address) {\n        setTransactions([]);\n        return;\n      }\n      try {\n        const response = await axios.get(`https://api.etherscan.io/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&sort=asc&apikey=${apiKey}`);\n        const fetchedTransactions = response.data.result;\n        setTransactions(fetchedTransactions);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTransactions();\n  }, [address]);\n  useEffect(() => {\n    const checkEnglishMessages = async () => {\n      const messages = transactions.map(transaction => {\n        const message = toUtf8(transaction.input);\n        return message;\n      });\n      const translatedMessages = await Promise.all(messages.map(async message => {\n        if (!message) return \"\";\n        const {\n          text\n        } = await translate(message, {\n          to: \"en\"\n        });\n        return text;\n      }));\n      const englishMessages = translatedMessages.filter(message => {\n        return /[A-Za-z]/.test(message);\n      });\n      setEnglishMessages(englishMessages);\n    };\n    checkEnglishMessages();\n  }, [transactions]);\n  const handleAddressChange = event => {\n    setAddress(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-50 min-h-screen p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-8\",\n      children: \"Ethereum Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"font-bold mr-2\",\n        children: \"Enter Ethereum address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"border border-gray-300 rounded py-2 px-4 w-96\",\n        value: address,\n        onChange: handleAddressChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), transactions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Transactions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No transactions to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), englishMessages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"English messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: englishMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YIrfIJYEQVwGTap7EZtAou7LzrU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","toUtf8","translate","TransactionList","jsxDEV","_jsxDEV","App","_s","address","setAddress","transactions","setTransactions","englishMessages","setEnglishMessages","apiKey","fetchTransactions","response","get","fetchedTransactions","data","result","error","console","checkEnglishMessages","messages","map","transaction","message","input","translatedMessages","Promise","all","text","to","filter","test","handleAddressChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","length","index","_c","$RefreshReg$"],"sources":["/Users/jordane/Desktop/WalletScan/scan/src/App.js"],"sourcesContent":["\n  \nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { toUtf8 } from \"ethereumjs-util\";\nimport { translate } from \"google-translates-api\";\nimport TransactionList from \"./TransactionList\";\n\nfunction App() {\n  const [address, setAddress] = useState(\"\");\n  const [transactions, setTransactions] = useState([]);\n  const [englishMessages, setEnglishMessages] = useState([]);\n  const apiKey = '8GJCS6VIZ9GEXSMKMMHVRTKVZG62AZWGK2';\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      if (!address) {\n        setTransactions([]);\n        return;\n      }\n\n      try {\n        const response = await axios.get(\n          `https://api.etherscan.io/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&sort=asc&apikey=${apiKey}`\n        );\n        const fetchedTransactions = response.data.result;\n        setTransactions(fetchedTransactions);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchTransactions();\n  }, [address]);\n\n  useEffect(() => {\n    const checkEnglishMessages = async () => {\n      const messages = transactions.map((transaction) => {\n        const message = toUtf8(transaction.input);\n        return message;\n      });\n\n      const translatedMessages = await Promise.all(\n        messages.map(async (message) => {\n          if (!message) return \"\";\n\n          const { text } = await translate(message, { to: \"en\" });\n          return text;\n        })\n      );\n\n      const englishMessages = translatedMessages.filter((message) => {\n        return /[A-Za-z]/.test(message);\n      });\n\n      setEnglishMessages(englishMessages);\n    };\n\n    checkEnglishMessages();\n  }, [transactions]);\n\n  const handleAddressChange = (event) => {\n    setAddress(event.target.value);\n  };\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen p-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">Ethereum Transactions</h1>\n      <div className=\"mb-8\">\n        <label className=\"font-bold mr-2\">Enter Ethereum address:</label>\n        <input\n          type=\"text\"\n          className=\"border border-gray-300 rounded py-2 px-4 w-96\"\n          value={address}\n          onChange={handleAddressChange}\n        />\n      </div>\n      {transactions.length > 0 ? (\n        <div>\n          <h2 className=\"text-xl font-bold mb-4\">Transactions:</h2>\n          <TransactionList transactions={transactions} />\n        </div>\n      ) : (\n        <p>No transactions to display.</p>\n      )}\n      {englishMessages.length > 0 && (\n        <div>\n          <h2 className=\"text-xl font-bold mb-4\">English messages:</h2>\n          <ul>\n            {englishMessages.map((message, index) => (\n              <li key={index}>{message}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}