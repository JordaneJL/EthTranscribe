{"ast":null,"code":"'use strict';\n\nconst bufferStream = require('./buffer-stream');\nfunction getStream(inputStream, opts) {\n  if (!inputStream) {\n    return Promise.reject(new Error('Expected a stream'));\n  }\n  opts = Object.assign({\n    maxBuffer: Infinity\n  }, opts);\n  const maxBuffer = opts.maxBuffer;\n  let stream;\n  let clean;\n  const p = new Promise((resolve, reject) => {\n    const error = err => {\n      if (err) {\n        // null check\n        err.bufferedData = stream.getBufferedValue();\n      }\n      reject(err);\n    };\n    stream = bufferStream(opts);\n    inputStream.once('error', error);\n    inputStream.pipe(stream);\n    stream.on('data', () => {\n      if (stream.getBufferedLength() > maxBuffer) {\n        reject(new Error('maxBuffer exceeded'));\n      }\n    });\n    stream.once('error', error);\n    stream.on('end', resolve);\n    clean = () => {\n      // some streams doesn't implement the `stream.Readable` interface correctly\n      if (inputStream.unpipe) {\n        inputStream.unpipe(stream);\n      }\n    };\n  });\n  p.then(clean, clean);\n  return p.then(() => stream.getBufferedValue());\n}\nmodule.exports = getStream;\nmodule.exports.buffer = (stream, opts) => getStream(stream, Object.assign({}, opts, {\n  encoding: 'buffer'\n}));\nmodule.exports.array = (stream, opts) => getStream(stream, Object.assign({}, opts, {\n  array: true\n}));","map":{"version":3,"names":["bufferStream","require","getStream","inputStream","opts","Promise","reject","Error","Object","assign","maxBuffer","Infinity","stream","clean","p","resolve","error","err","bufferedData","getBufferedValue","once","pipe","on","getBufferedLength","unpipe","then","module","exports","buffer","encoding","array"],"sources":["/Users/jordane/Desktop/WalletScan/scan/node_modules/got/node_modules/get-stream/index.js"],"sourcesContent":["'use strict';\nconst bufferStream = require('./buffer-stream');\n\nfunction getStream(inputStream, opts) {\n\tif (!inputStream) {\n\t\treturn Promise.reject(new Error('Expected a stream'));\n\t}\n\n\topts = Object.assign({maxBuffer: Infinity}, opts);\n\n\tconst maxBuffer = opts.maxBuffer;\n\tlet stream;\n\tlet clean;\n\n\tconst p = new Promise((resolve, reject) => {\n\t\tconst error = err => {\n\t\t\tif (err) { // null check\n\t\t\t\terr.bufferedData = stream.getBufferedValue();\n\t\t\t}\n\n\t\t\treject(err);\n\t\t};\n\n\t\tstream = bufferStream(opts);\n\t\tinputStream.once('error', error);\n\t\tinputStream.pipe(stream);\n\n\t\tstream.on('data', () => {\n\t\t\tif (stream.getBufferedLength() > maxBuffer) {\n\t\t\t\treject(new Error('maxBuffer exceeded'));\n\t\t\t}\n\t\t});\n\t\tstream.once('error', error);\n\t\tstream.on('end', resolve);\n\n\t\tclean = () => {\n\t\t\t// some streams doesn't implement the `stream.Readable` interface correctly\n\t\t\tif (inputStream.unpipe) {\n\t\t\t\tinputStream.unpipe(stream);\n\t\t\t}\n\t\t};\n\t});\n\n\tp.then(clean, clean);\n\n\treturn p.then(() => stream.getBufferedValue());\n}\n\nmodule.exports = getStream;\nmodule.exports.buffer = (stream, opts) => getStream(stream, Object.assign({}, opts, {encoding: 'buffer'}));\nmodule.exports.array = (stream, opts) => getStream(stream, Object.assign({}, opts, {array: true}));\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE/C,SAASC,SAASA,CAACC,WAAW,EAAEC,IAAI,EAAE;EACrC,IAAI,CAACD,WAAW,EAAE;IACjB,OAAOE,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,mBAAmB,CAAC,CAAC;EACtD;EAEAH,IAAI,GAAGI,MAAM,CAACC,MAAM,CAAC;IAACC,SAAS,EAAEC;EAAQ,CAAC,EAAEP,IAAI,CAAC;EAEjD,MAAMM,SAAS,GAAGN,IAAI,CAACM,SAAS;EAChC,IAAIE,MAAM;EACV,IAAIC,KAAK;EAET,MAAMC,CAAC,GAAG,IAAIT,OAAO,CAAC,CAACU,OAAO,EAAET,MAAM,KAAK;IAC1C,MAAMU,KAAK,GAAGC,GAAG,IAAI;MACpB,IAAIA,GAAG,EAAE;QAAE;QACVA,GAAG,CAACC,YAAY,GAAGN,MAAM,CAACO,gBAAgB,EAAE;MAC7C;MAEAb,MAAM,CAACW,GAAG,CAAC;IACZ,CAAC;IAEDL,MAAM,GAAGZ,YAAY,CAACI,IAAI,CAAC;IAC3BD,WAAW,CAACiB,IAAI,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAChCb,WAAW,CAACkB,IAAI,CAACT,MAAM,CAAC;IAExBA,MAAM,CAACU,EAAE,CAAC,MAAM,EAAE,MAAM;MACvB,IAAIV,MAAM,CAACW,iBAAiB,EAAE,GAAGb,SAAS,EAAE;QAC3CJ,MAAM,CAAC,IAAIC,KAAK,CAAC,oBAAoB,CAAC,CAAC;MACxC;IACD,CAAC,CAAC;IACFK,MAAM,CAACQ,IAAI,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAC3BJ,MAAM,CAACU,EAAE,CAAC,KAAK,EAAEP,OAAO,CAAC;IAEzBF,KAAK,GAAGA,CAAA,KAAM;MACb;MACA,IAAIV,WAAW,CAACqB,MAAM,EAAE;QACvBrB,WAAW,CAACqB,MAAM,CAACZ,MAAM,CAAC;MAC3B;IACD,CAAC;EACF,CAAC,CAAC;EAEFE,CAAC,CAACW,IAAI,CAACZ,KAAK,EAAEA,KAAK,CAAC;EAEpB,OAAOC,CAAC,CAACW,IAAI,CAAC,MAAMb,MAAM,CAACO,gBAAgB,EAAE,CAAC;AAC/C;AAEAO,MAAM,CAACC,OAAO,GAAGzB,SAAS;AAC1BwB,MAAM,CAACC,OAAO,CAACC,MAAM,GAAG,CAAChB,MAAM,EAAER,IAAI,KAAKF,SAAS,CAACU,MAAM,EAAEJ,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,IAAI,EAAE;EAACyB,QAAQ,EAAE;AAAQ,CAAC,CAAC,CAAC;AAC1GH,MAAM,CAACC,OAAO,CAACG,KAAK,GAAG,CAAClB,MAAM,EAAER,IAAI,KAAKF,SAAS,CAACU,MAAM,EAAEJ,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,IAAI,EAAE;EAAC0B,KAAK,EAAE;AAAI,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}