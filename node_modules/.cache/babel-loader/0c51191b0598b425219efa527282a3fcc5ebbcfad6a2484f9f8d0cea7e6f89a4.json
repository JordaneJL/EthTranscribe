{"ast":null,"code":"var _jsxFileName = \"/Users/jordane/Desktop/WalletScan/scan/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Buffer } from 'buffer';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [inputAddress, setInputAddress] = useState('');\n  const web3 = new Web3(window.ethereum);\n  const apiKey = '8GJCS6VIZ9GEXSMKMMHVRTKVZG62AZWGK2';\n  useEffect(() => {\n    const isValidAddress = web3.utils.isAddress(inputAddress);\n    if (!isValidAddress) {\n      return;\n    }\n    const fetchData = async () => {\n      const result = await axios(`https://api.etherscan.io/api?module=account&action=txlist&address=${encodeURIComponent(inputAddress)}&startblock=0&endblock=99999999&page=1&sort=desc&apikey=${apiKey}`);\n      setData(result.data.result);\n    };\n    fetchData();\n  }, [inputAddress]);\n  const getTransactionLink = txHash => {\n    return `https://etherscan.io/tx/${txHash}`;\n  };\n  const getHumanReadibleMessage = hexString => {\n    try {\n      return decodeURIComponent(escape(Buffer.from(hexString, 'hex').toString('utf8')));\n    } catch (error) {\n      console.log(error);\n      return \"Error: Unable to decode input data\";\n    }\n  };\n  const filteredData = data.filter(tx => tx.input !== '0x' && getHumanReadibleMessage(tx.input.slice(2)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-8\",\n      children: \"Ethereum Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        className: \"block mb-2\",\n        children: \"Ethereum Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        value: inputAddress,\n        onChange: e => setInputAddress(e.target.value),\n        className: \"border border-gray-400 py-2 px-4 rounded w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(filteredData) && filteredData.length > 0 ? filteredData.map(tx => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-gray-400 p-4 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold mb-2\",\n            children: \"Tx Hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: getTransactionLink(tx.hash),\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: tx.hash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold mb-2\",\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tx.from\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold mb-2\",\n            children: \"Message plein:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: getHumanReadibleMessage(tx.input.slice(2))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, tx.hash, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions found with messages found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"trGpeme9k5AaaPWvxQHiARTgA3A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Buffer","Web3","jsxDEV","_jsxDEV","App","_s","data","setData","inputAddress","setInputAddress","web3","window","ethereum","apiKey","isValidAddress","utils","isAddress","fetchData","result","encodeURIComponent","getTransactionLink","txHash","getHumanReadibleMessage","hexString","decodeURIComponent","escape","from","toString","error","console","log","filteredData","filter","tx","input","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","Array","isArray","length","map","href","hash","rel","_c","$RefreshReg$"],"sources":["/Users/jordane/Desktop/WalletScan/scan/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Buffer } from 'buffer';\nimport Web3 from 'web3';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [inputAddress, setInputAddress] = useState('');\n  const web3 = new Web3(window.ethereum);\n  const apiKey = '8GJCS6VIZ9GEXSMKMMHVRTKVZG62AZWGK2';\n\n  useEffect(() => {\n    const isValidAddress = web3.utils.isAddress(inputAddress);\n    if (!isValidAddress) {\n      return;\n    }\n    const fetchData = async () => {\n      const result = await axios(\n        `https://api.etherscan.io/api?module=account&action=txlist&address=${encodeURIComponent(inputAddress)}&startblock=0&endblock=99999999&page=1&sort=desc&apikey=${apiKey}`\n      );\n      setData(result.data.result);\n    };\n    \n    fetchData();\n  }, [inputAddress]);\n  \n\n  const getTransactionLink = (txHash) => {\n    return `https://etherscan.io/tx/${txHash}`;\n  };\n\n  const getHumanReadibleMessage = (hexString) => {\n    try {\n      return decodeURIComponent(escape(Buffer.from(hexString, 'hex').toString('utf8')));\n    } catch (error) {\n      console.log(error);\n      return \"Error: Unable to decode input data\";\n    }\n  };\n  \n  const filteredData = data.filter((tx) => tx.input !== '0x' && getHumanReadibleMessage(tx.input.slice(2)));\n\n  return (\n    <div className=\"p-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">Ethereum Transactions</h1>\n      <div className=\"mb-8\">\n        <label htmlFor=\"address\" className=\"block mb-2\">\n          Ethereum Address:\n        </label>\n        <input\n          type=\"text\"\n          id=\"address\"\n          value={inputAddress}\n          onChange={(e) => setInputAddress(e.target.value)}\n          className=\"border border-gray-400 py-2 px-4 rounded w-full\"\n        />\n      </div>\n      <ul>\n        {Array.isArray(filteredData) && filteredData.length > 0 ? (\n          filteredData.map((tx) => (\n            <li key={tx.hash} className=\"mb-8\">\n              <div className=\"bg-white border border-gray-400 p-4 rounded\">\n                <p className=\"font-bold mb-2\">Tx Hash:</p>\n                <a href={getTransactionLink(tx.hash)} target=\"_blank\" rel=\"noreferrer\">\n                  {tx.hash}\n                </a>\n                <p className=\"font-bold mb-2\">From:</p>\n                <p>{tx.from}</p>\n                <p className=\"font-bold mb-2\">Message plein:</p>\n                <p>{getHumanReadibleMessage(tx.input.slice(2))}</p>\n              </div>\n            </li>\n          ))\n        ) : (\n          <p>No transactions found with messages found.</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}